<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
        One for Windows with net8.0-windows TFM, one for MacOS with net8.0-macos and one with net8.0 TFM for Linux.-->
        <TargetFramework>net8.0</TargetFramework>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
        <ApplicationIcon>Assets\IconOpaque_32x32.ico</ApplicationIcon>
        <Company>Paradigm Reality Enhancement Labs</Company>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <AssemblyVersion></AssemblyVersion>
        <FileVersion></FileVersion>
    </PropertyGroup>

    <PropertyGroup>
        <ApplicationManifest>app.manifest</ApplicationManifest>
    </PropertyGroup>
	
	<PropertyGroup Condition=" '$(OS)' == 'Windows_NT' ">
	  <DefineConstants>WINDOWS</DefineConstants>
	</PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia.Desktop" Version="11.3.4" />
        <PackageReference Include="Velopack" Version="0.0.1298" />

        <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
        <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.3.0" />
        <PackageReference Include="Avalonia.Skia" Version="11.3.4" />
        <PackageReference Include="SkiaSharp" Version="3.119.0" />

	    <!-- Windows-specific -->
        <PackageReference Include="OpenCvSharp4.runtime.win" Version="4.11.0.20250507" Condition="$([MSBuild]::IsOSPlatform('Windows'))" />
	    <PackageReference Include="Microsoft.ML.OnnxRuntime.DirectML" Version="1.22.1" Condition="$([MSBuild]::IsOSPlatform('Windows'))" />
        <PackageReference Include="SkiaSharp.NativeAssets.Win32" Version="3.119.0" Condition="$([MSBuild]::IsOSPlatform('Windows'))" />
		<PackageReference Include="DirectShowLib" Version="1.0.0" Condition="$([MSBuild]::IsOSPlatform('Windows'))" />

        <!-- macOS-specific -->
        <PackageReference Include="OpenCvSharp4.runtime.osx.10.15-universal" Version="4.7.0.20230224" Condition="$([MSBuild]::IsOSPlatform('OSX'))" />
	    <PackageReference Include="Microsoft.ML.OnnxRuntime" Version="1.22.0" Condition="$([MSBuild]::IsOSPlatform('OSX'))" />
        <PackageReference Include="SkiaSharp.NativeAssets.macOS" Version="3.119.0" Condition="$([MSBuild]::IsOSPlatform('OSX'))" />

        <!-- Linux-specific -->
        
<PackageReference Include="OpenCvSharp4.official.runtime.linux-x64" Version="4.11.0.20250507" Condition="$([MSBuild]::IsOSPlatform('Linux'))"/>
	    <PackageReference Include="Microsoft.ML.OnnxRuntime.Gpu" Version="1.22.0" Condition="$([MSBuild]::IsOSPlatform('Linux'))" />
      <PackageReference Include="SkiaSharp.NativeAssets.Linux" Version="3.119.0" Condition="$([MSBuild]::IsOSPlatform('Linux'))"/>
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\Baballonia.OpenCVCapture\Baballonia.OpenCVCapture.csproj" />
        <ProjectReference Include="..\Baballonia.SDK\Baballonia.SDK.csproj" />
        <ProjectReference Include="..\Baballonia.SerialCameraCapture\Baballonia.SerialCameraCapture.csproj" />
        <ProjectReference Include="..\Baballonia\Baballonia.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Reference Include="OpenCvSharp">
        <HintPath>..\..\..\opencvsharp\src\OpenCvSharp\bin\Debug\net6.0\OpenCvSharp.dll</HintPath>
      </Reference>
    </ItemGroup>

    <ItemGroup>
      <None Update="assets\BannerOpaque_90x58.png">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\BannerOpaque_175x345.png">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\Icon_32x32.ico">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\Icon_512x512.png">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\IconOpaque_32x32.ico">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\IconOpaque_32x32.png">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\MUI_HEADERIMAGE_BITMAP.bmp">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\MUI_WELCOMEFINISHPAGE_BITMAP.bmp">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\license.txt">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="baseline_L.pth">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="baseline_R.pth">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="Calibration\Linux\gaze_overlay">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="Calibration\Linux\trainer">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="Calibration\Windows\app.rc">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="Calibration\Windows\app.res">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="Calibration\Windows\calibration_runner.exe">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="Calibration\Windows\capture_417272897.bin">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="Calibration\Windows\gaze_overlay.exe">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="Calibration\Windows\onnxruntime.dll">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="Calibration\Windows\onnxruntime_providers_shared.dll">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="Calibration\Windows\openvr_api.dll">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="Calibration\Windows\turbojpeg.dll">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="onnx_artifacts\training\checkpoint\paramfrozen_tensors.pbseq">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="onnx_artifacts\training\checkpoint\paramtrain_tensors.pbseq">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="onnx_artifacts\training\eval_model.onnx">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="onnx_artifacts\training\optimizer_model.onnx">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="onnx_artifacts\training\training_model.onnx">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="onnx_artifacts\baball_model.onnx">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="onnx_artifacts\temporal_eye_tracking_model.onnx">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="trainermin.exe">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="video.bin">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
    </ItemGroup>
</Project>
